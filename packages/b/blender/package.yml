name       : blender
version    : 4.0.0
release    : 80
source     :
    - https://download.blender.org/source/blender-4.0.0.tar.xz : e5a523c14082dae93706fb002b16e731f2ab4b202f5e82337d62272ca4884569
    # https://download.blender.org/demo/test/BMW27.blend.zip : 08170de260488c14855a13db81c8d5ad844bc6162c3db13e1d9ba8094f55fe2b
    - https://developer.download.nvidia.com/compute/cuda/12.3.0/local_installers/cuda_12.3.0_545.23.06_linux.run#cuda-sdk.run : 7c13face3af64d6e1648d6e3101d31c8111e747143acb0077d973c1690820422
    - https://developer.download.nvidia.com/redist/optix/v7.6/OptiX-7.6-Include.zip : f4c6b2a33d8ed14af8ad6d0fea3a9d60e544fba540c05055a754e06c2f8097b3
license    : GPL-2.0-or-later
homepage   : https://blender.org/
component  : multimedia.graphics
summary    : A fully integrated 3D graphics creation suite
description: |
    Blender is the free and open source 3D creation suite. It supports the entirety of the 3D pipelineâ€”modeling, rigging, animation, simulation, rendering, compositing and motion tracking, even video editing and game creation.
builddeps  :
    - pkgconfig(OpenColorIO)
    - pkgconfig(OpenEXR)
    - pkgconfig(OpenImageIO)
    - pkgconfig(epoxy)
    - pkgconfig(fftw3f)
    - pkgconfig(freetype2)
    - pkgconfig(jack)
    - pkgconfig(jemalloc)
    - pkgconfig(libavcodec)
    - pkgconfig(libdecor-0)
    - pkgconfig(libopenjp2)
    - pkgconfig(libpcre)
    - pkgconfig(libpulse)
    - pkgconfig(libtiff-4)
    - pkgconfig(libturbojpeg)
    - pkgconfig(libwebp)
    - pkgconfig(libzstd)
    - pkgconfig(lzo2)
    - pkgconfig(openal)
    - pkgconfig(oslcomp)
    - pkgconfig(pugixml)
    - pkgconfig(python3)
    - pkgconfig(sdl2)
    - pkgconfig(sndfile)
    - pkgconfig(tbb)
    - pkgconfig(wayland-protocols)
    - pkgconfig(xi)
    - pkgconfig(xkbcommon)
    - pkgconfig(xrender)
    - pkgconfig(xxf86vm)
    - alembic-devel
    - embree-devel
    - libboost-devel
    - libharu-devel
    - llvm-devel
    - numpy
    - opencollada-devel
    - openimagedenoise-devel
    - opensubdiv-devel
    - openvdb-devel
    - potrace-devel
    - rocm-hip-devel
rundeps    :
    - opencollada
    - rocm-runtime
clang      : yes
environment: |
    export ROCM_PATH=/usr
    export HIP_PATH=/usr
    export DEVICE_LIB_PATH=/usr/lib64/amdgcn/bitcode
setup      : |
    mkdir cuda-sdk cuda-tmp optix-headers

    pushd optix-headers
    unzip $sources/OptiX-7.6-Include.zip
    popd

    pushd $sources
    sh cuda-sdk.run --silent --toolkit --toolkitpath=$workdir/cuda-sdk --tmpdir=$workdir/cuda-tmp
    popd

    # Allow gcc-13 to work
    sed -i "/.*unsupported GNU version.*/d" cuda-sdk/include/crt/host_config.h
    sed -i "/.*unsupported clang version.*/d" cuda-sdk/include/crt/host_config.h

    %cmake_ninja \
        -DCUDA_TOOLKIT_ROOT_DIR=$workdir/cuda-sdk/ \
        -DPYTHON_VERSION=%python3_version% \
        -DPYTHON_LIBPATH=%libdir% \
        -DPYTHON_LIBRARY=python%python3_version% \
        -DPYTHON_INCLUDE_DIR=/usr/include/python%python3_version% \
        -DWITH_ALEMBIC=ON \
        -DWITH_CODEC_FFMPEG=ON \
        -DWITH_CODEC_SNDFILE=ON \
        -DWITH_CYCLES_CUDA_BINARIES=ON \
        -DWITH_CYCLES_EMBREE=ON \
        -DWITH_CYCLES_HIP_BINARIES=ON \
        -DWITH_CYCLES_OSL=ON \
        -DWITH_FFTW3=ON \
        -DWITH_HARU=ON \
        -DWITH_IMAGE_OPENJPEG=ON \
        -DWITH_INSTALL_PORTABLE=OFF \
        -DWITH_JACK=ON \
        -DWITH_LLVM=ON \
        -DOPTIX_ROOT_DIR="$workdir/optix-headers" \
        -DWITH_OPENCOLORIO=ON \
        -DWITH_OPENIMAGEIO=ON \
        -DWITH_OPENSUBDIV=ON \
        -DWITH_OPENVDB=ON \
        -DWITH_POTRACE=ON \
        -DWITH_PULSEAUDIO=ON \
        -DWITH_PYTHON_INSTALL=OFF \
        -DWITH_SDL=ON \
        -DWITH_SYSTEM_GLEW=ON \
        -DWITH_SYSTEM_LZO=ON \
        -DWITH_USD=ON \
        -DWITH_X11_XINPUT=ON \
        -DCYCLES_HIP_BINARIES_ARCH="%AMDGPUTARGETS%;gfx90c;gfx902;gfx1011;gfx1012;gfx1031;gfx1032;gfx1033;gfx1034;gfx1035;gfx1036;gfx1103"
build      : |
    %ninja_build
install    : |
    %ninja_install
    %python3_compile $installdir/usr/share/blender
    install -Dm00644 $pkgfiles/blender.thumbnailer -t $installdir/usr/share/thumbnailers
    rm -r $installdir/usr/share/doc/blender/license/
# TODO(GZGavinZhao): enable headless blender testing; currently it can't
# find Python scripts needed at runtime
# check      : |
#     unzip $sources/BMW27.blend.zip
# 
#     if [ -e /dev/kfd ]; then
#         # ./solusBuildDir/bin/blender -b BMW27.blend -f 0 -- --cycles-device HIP
#     fi
