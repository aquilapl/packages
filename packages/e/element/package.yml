name       : element
version    : 1.11.57
release    : 162
homepage   : https://element.io/
source     :
    - git|https://github.com/vector-im/element-desktop.git : v1.11.57
    - git|https://github.com/vector-im/element-web.git : v1.11.57
license    : Apache-2.0
component  : network.im
networking : yes
summary    : A glossy Matrix collaboration client for desktop.
description: |
    All-in-one secure chat app for teams, friends and organisations. Keeps conversations in your control, safe from data-mining and ads. Talk to everyone through the open global Matrix network, protected by proper end-to-end encryption.
replaces   :
    - riot
builddeps  :
    - pkgconfig(alsa)
    - pkgconfig(atspi-2)
    - pkgconfig(gbm)
    - pkgconfig(gconf-2.0)
    - pkgconfig(gdk-3.0)
    - pkgconfig(libsecret-1)
    - pkgconfig(pango)
    - pkgconfig(sqlcipher)
    - pkgconfig(xcomposite)
    - pkgconfig(xcursor)
    - pkgconfig(xrandr)
    - pkgconfig(xscrnsaver)
    - pkgconfig(xtst)
    - cargo
    - git
    - jq
    - libxcrypt-compat
    - yarn
rundeps    :
    - libsecret
    - nodejs
    - sqlcipher
setup      : |
    # Copy element-web to the build directory
    cp -a $sources/element-web.git element-web

    # Disable updates/tracking, enable labs settings
    jq '.update_base_url = null | .posthog = null | .show_labs_settings = true' \
        element.io/release/config.json > config.json

    tmp=$(mktemp)
    # Create an unpacked distribution, allowing us to more easily see changes to shipped files
    jq ".build.linux.asar = false" package.json > "$tmp" && mv "$tmp" package.json
    # Save some build time by not building a packaged .tar.gz or .deb
    jq ".build.linux.target = [\"dir\"]" package.json > "$tmp" && mv "$tmp" package.json

    # Ensure that autolaunch files specify the direct path to the wrapper script
    %patch -p1 -i $pkgfiles/autolaunch.patch

    # Perform yarn install on both
    yarn install --frozen-lockfile --network-timeout 180000
    yarn --cwd element-web install --frozen-lockfile --network-timeout 180000
build      : |
    # Build element-web
    yarn --cwd element-web build

    # Build element-desktop
    yarn run build:native
    yarn run build

    # Cleanup some things we don't need to reduce package size
    pushd dist/linux-unpacked
    find . -type f -name "*.js.map" -print0 | xargs -0 -n1 rm -v
    find . -type f -name "*.ts.map" -print0 | xargs -0 -n1 rm -v
    find . -type f -name "*.ts" -print0 | xargs -0 -n1 rm -v
    rm -rfv resources/app/node_modules/*/src/{keytar,matrix-seshat,sprintf-js}
    # Cleanup empty folders
    find . -type d -empty -delete -print
    popd
install    : |
    # Installdir for Element
    element_installdir=$installdir/usr/share/element

    install -dm00644 $element_installdir
    cp -Rv dist/linux-unpacked/* $element_installdir
    cp -Rv element-web/webapp $element_installdir/resources/

    # Wrapper script
    install -Dm00755 $pkgfiles/electron-desktop.sh $installdir/usr/bin/element-desktop

    # Install configuration
    install -Dm00644 config.json $element_installdir/resources/webapp/

    # Install Icons
    for icon_size in 16 24 48 64 96 128 256 512
    do
        install -Dm00644 build/icons/${icon_size}x${icon_size}.png $installdir/usr/share/icons/hicolor/${icon_size}x${icon_size}/apps/element-desktop.png
        # Symlink for existing .desktop files
        ln -s element-desktop.png $installdir/usr/share/icons/hicolor/${icon_size}x${icon_size}/apps/element.png
    done

    # Fix Wayland appid
    package_json=$element_installdir/resources/app/package.json
    tmp=$(mktemp)
    jq ".desktopName = \"Element.desktop\"" $package_json > "$tmp" && mv "$tmp" $package_json
    chmod 644 $package_json

    # Desktop File
    install -Dm00644 $pkgfiles/Element.desktop $installdir/usr/share/applications/Element.desktop

    # appstream data
    install -Dm00644 $pkgfiles/element.appdata.xml $installdir/usr/share/metainfo/element.appdata.xml
